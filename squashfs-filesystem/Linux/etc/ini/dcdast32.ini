
;//-------------------------------------------------------------------------
;//
;//                 Dell Inc. PROPRIETARY INFORMATION
;//
;//  This software is supplied under the terms of a license agreement or
;//  nondisclosure agreement with Dell Inc. and may not be copied or
;//  disclosed except in accordance with the terms of that agreement.
;//
;//  Copyright (c) 1995-2012 Dell Inc. All Rights Reserved.
;//
;//  Abstract/Purpose:
;//    Data Accessor static configuration file
;//
;//  See Also:
;//    See Data Accessor Design Document
;//
;//-------------------------------------------------------------------------

;//-------------------------------------------------------------------------
;//
;// NOTES:
;//
;// Naming Convention
;// -----------------
;// Please use caution in assigning values to the name-value pairs in this
;// document. For each entry pair, either the name, or the value, or both
;// will be used to generate an XML string/document. 
;// 
;// An example of value-only XML generation is the "bitmap" definition.
;// Each entry defines a numeric bitmap position followed by a value string
;// which will be used to generate an XML.
;//
;// An example of name-only XML generation is the "ObjNameToCXM" definition.
;// Each entry defines a value CXM filename prefix to an object name which
;// will be used to generate an XML.
;//
;// Another example is when defining a struct in a CXM file. The naming
;// restriction applies to the struct variable name and the struct name
;// itself.
;//
;// In general, use the following guidelines on creating an entry in this
;// document. For a "name" and/or "value" in a name-value pair entry: always
;// start the string with a "letter" or "_" (underscore). No whitespaces in
;// front or in between. subsequent characters may be of the following
;// ( Letter | Digit | '.' | '-' | '_' | ':' ). 
;//
;// When in doubt, always test the application to verify that your entry
;// generates a valid XML or, at a higher level, properly displays.
;// For more info, please reference the XML specification under 
;// http://www.w3.org/TR/REC-xml and search for "start-tag".
;//
;//-------------------------------------------------------------------------


;//-------------------------------------------------------------------------
;// Constant strings
;//-------------------------------------------------------------------------


;//-------------------------------------------------------------------------
[numtostrload]
smvtype=true
objstatus=true
smstatus=true
smlogmode=true
smlogtype=true

;//-------------------------------------------------------------------------
[strtostrload]
conststrings=true
filenames=true

;//-------------------------------------------------------------------------
[conststrings]
uselegacycmdlogging=true
usecomponentcmdlogging=false
usecomponentcmdlogging.esxi=false
setpropertyloadatstartup=true
dapluginappendproductpath=false
root=Root
mainsystemchassis=MainSystemChassis
xmlescapestringval=1
lognochangeonsets=false

;//-------------------------------------------------------------------------
[filenames]
setcmdlogname=omcmdlog.xml

;//-------------------------------------------------------------------------
[smvtype]
0xFF=UNDEFINED
0x00=BOOLN
0x01=s8
0x02=s16
0x03=s32
0x04=s64
0x05=u8
0x06=u16
0x07=u32
0x08=u64
0x09=d64
0x0A=LANGID
0x0B=TIME_T
0x0C=BINARY
0x0D=ASTRING
0x0E=USTRING
0x21=S16
0x22=S32
0x23=S64
0x25=U16
0x26=U32
0x27=U64
0x28=D64
0x30=SMSSUTF8STR
0x31=SMSSUCS2STR
0x32=SMXMLSTRBUF

;//-------------------------------------------------------------------------
[objstatus]
0=OTHER
1=UNKNOWN
2=OK
3=NON_CRITICAL
4=CRITICAL
5=NON_RECOVERABLE

;//-------------------------------------------------------------------------
[smlogmode]
0=unknown
1=none
2=all
3=oldonly
4=newonly

;//-------------------------------------------------------------------------
[smlogtype]
0x0000=success
0x0001=error
0x0002=warning
0x0004=information
0x0008=audit_success
0x0010=audit_failure
0xffff=all

;//-------------------------------------------------------------------------
[smstatus]
;; Device Driver error codes
-1=UNSUCCESSFUL
0=SUCCESS
1=CMD_NOT_IMPLEMENTED
2=CMD_BAD
3=TIMEOUT
4=CANCELLED
5=ABORT
6=PENDING
7=NO_SUCH_DEVICE
8=DEVICE_BUSY
9=DEVICE_BAD
10=DEVICE_SPURIOUS_INTR
11=RESOURCE_LOCKED
12=INVALID_INDEX
13=SMB_ERROR
14=DATA_NOT_READY
15=DATA_UNDERRUN
16=DATA_OVERRUN
17=DEVICE_NOT_READY
18=DEVICE_EMPTY
19=DEVICE_FULL
20=DEVICE_ALREADY_EXISTS
21=PENDING_DOIO_QUEUE
22=PENDING_BUSY_QUEUE
;; Data Engine error codes
256=NO_SUCH_OBJECT
257=OBJECT_BAD
258=OBJECT_ALREADY_EXISTS
260=NO_SUCH_INI
261=INI_BAD
262=INI_NO_SUCH_SECTION
263=INI_NO_SUCH_KEY
264=INI_VALUE_BAD
270=RIGHTS_INSUFFICIENT
271=INVALID_PARAMETER
272=OUT_OF_MEMORY
280=NO_SUCH_XML
281=XML_BAD
282=XML_NO_SUCH_NODE
283=XML_NODE_VALUE_BAD
290=VALUE_TOO_LARGE
291=VALUE_TOO_SMALL
300=OS_SNMP_NOT_FOUND
301=DE_SNMP_NOT_FOUND
302=DECMD_SCRIPT_ERROR
;; DRSC/ESM error codes
1024=DRSC_DATA_OVERFLOW
1025=DRSC_IPMI_FAILURE
1026=DRSC_TIMEOUT
1027=DRSC_MESSAGE_ID_MISMATCH
1028=DRSC_UNABLE_TO_ALLOCATE_BUFFER
1029=DRSC_UNABLE_TO_PARSE_DATA
1030=DRSC_INVALID_SET_REQ_TYPE
1031=DRSC_INVALID_SET_REQ_SUBTYPE
1032=DRSC_FAILURE_FROM_DRSC
1033=DRSC_GENERIC
1034=DRSC_CANT_ALLOC_MSG_BUF
1035=DRSC_OUT_OF_MSG_BUFFERS
1036=DRSC_CHKSUM_SIZE_TOO_BIG
1037=DRSC_CHKSUM_MSGDATA_NULL
1038=DRSC_INVALID_PKT_TYPE
1039=DRSC_DEVID_NOT_FOUND_ON_OPEN
1040=DRSC_DEVID_NOT_FOUND_ON_DESTROY
1041=DRSC_INVALID_FLAGS_ON_OPEN
1042=DRSC_WRITE_MSG_TOO_BIG
1043=DRSC_INVALID_MSG_BUF_ENTRY
1044=DRSC_INVALID_REQUEST_MSG_TYPE
1045=DRSC_INVALID_CHKSUM
1046=DRSC_INVALID_MSGSIZE
1047=DRSC_INVALID_MSGWRITE
1048=DRSC_INVALID_MSGREAD
1049=DRSC_WRITE_MSG_TOO_BIG_RC
1050=DRSC_READ_MSG_TOO_BIG_RC
1051=DRSC_READ_ESCMSG_TOO_BIG_RC
1052=DRSC_DB_PROP
1053=DRSC_OID_PERMIS_DENIED_WRITE
1054=DRSC_OID_PERMIS_DENIED_READ
1055=DRSC_OID_OBJ_TYPE_INVALID
1056=DRSC_OID_OBJ_TYPE_CMDGET_INVALID
1057=DRSC_OID_GROUP_SIZE_INVALID
1058=DRSC_OID_PROPSET_ERR
1059=DRSC_OID_PROPGET_ERR
1060=DRSC_OID_CMDEXEC_ERR
1061=DRSC_OID_GET_ALLOC_ERR
1062=DRSC_OID_SETCMD_ALLOC_ERR
1063=DRSC_OID_OBJ_GROUP_INVALID
1064=DRSC_OID_OBJ_COLUMN_INVALID
1065=DRSC_OID_GET_OUTPUT_TOO_BIG
1066=DRSC_OID_GET_MEM_OVERRUN
1067=DRSC_OID_SETCMD_MEM_OVERRUN
1068=DRSC_OID_SETCMD_CMDLINE_TOO_BIG
1069=DRSC_OID_OBJ_TYPE_STRINGSET_INVALID
1070=DRSC_OID_OBJ_TYPE_INDEXSET_INVALID
1071=DRSC_OID_STRINGGET_ERR
1072=DRSC_OID_INDEXGET_ERR
1073=DRSC_OID_NO_USER_FOUND
1074=DRSC_TIMEOUT_WAITING_FOR_DRSC


;--------------------------------------------------------------------
; command help strings
;--------------------------------------------------------------------

[getobject]
description=Get object data
notes=Returns object data based on the given one or more object namespace or identifier

[getinstversion]
description=Get instrumentation service version
notes=Returns the version information of the instrumentation service as major, minor, and revision

[getobjectstatus]
description=Get the worst case object rolled-up status
notes=Returns the calculated worst case object rolled-up status given one or more object namespace or identifier

[getoidfromons]
description=Get object identifier from namespace
notes=Returns the object identifier for the corresponding namespace

[getonsfromoid]
description=Get object namespace from identifier
notes=Returns the object namespace for the corresponding identifier

[getchildlist]
description=Get a list of child object data based on the given parent object
notes=Returns a list of child object data based on the given parent object and a series of filters. See the parameter list for available filters. Provide only one of the object namespace or identifier

[getparentlist]
description=Get a list of parent object data based on the given child object
notes=Returns a list of parent object data based on the given child object and a series of filters. See the parameter list for available filters. Provide only one of the object namespace or identifier

[setobject]
description=Perform set operation based on the set identifier SETID provided and optional set parameters
notes=DEPRECATED: instead use sendsmreq (see section 3.4.8). The SETID is defined by the data populators and is exposed to DA users through the set property configuration INI.

[sendsmreq]
description=Send SM request based on request identifier REQID and optional request parameters
notes=The REQID is defined by the data populators and is exposed to DA users through the configuration INI.  If passthru is specified, then an optional name-value pair request input may be provided if suppression of multiple follow-up request and a specific response instance are desired. On success, the request return status and the response data if passthru is specified. Provide only one of the object namespace or identifier.

[checkeventfilter]
description=check if an event is to be filtered
notes=return success if is filtered

[seteventcfgall]
description=set all event filter for a specific severity
notes=set event filter to tag

[geteventcfgall]
description=get all event filter value for a specific severity
notes=return xml data

[seteventcfg]
description=set event filter by key
notes=set event filter (by key) to tag value

[geteventcfg]
description=get event filter value by key
notes=return xml data


;--------------------------------------------------------------------
; command parameter help strings
;--------------------------------------------------------------------

[oid]
description=object identifier

[ons]
description=object namespace

[showobjhead]
description=include header information (default=false)

[byobjtype]
description=search by object type

[byobjtypestr]
description=search by object type (as string)

[byobjstatus]
description=search by object status

[byobjstatusstr]
description=search by object status (as string)

[showbody]
description=include body information (default=false)

[objheadattr]
description=header information as attribute (default=true)

[recurse]
description=search recursively

[shownamespace]
description=include object namespace info (default=true)

[hierarchy]
description=result in hierarchy order (default=false); applies only if recurse=true and bytype and bystatus is off

[setid]
description=object unique set identifier

[reqid]
description=request unique identifier

[ispassthru]
description=flag to indicate object set mode is pass-thru

[objectclass]
description=class of the object key

[key]
description=unique name of the object key

[tag]
description=value tag of event filter

[severity]
description=severity (level) of the event log


;//-------------------------------------------------------------------------
;// End
;//-------------------------------------------------------------------------

